
@page "/post/{PostId:int}"


@using ProsjektOppgaveBlazor.data.Models.ViewModel
@inject HttpClient BlogHttpClient
@inject NavigationManager NavigationManager

<h3>Edit post</h3>

@if (post == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-3">
            <EditForm Model="@postViewModel">
                <DataAnnotationsValidator/>
                <div class="form-group">
                        <div>
                            <label for="Name">Post Title:</label>
                        <InputText class="form-control" @bind-Value="postViewModel.Title" />
                        <ValidationMessage For="@(()=>postViewModel.Title)" />
                        </div>
                        <div>
                            <label for="Content">Post Content:</label>
                            <InputText class="form-control" @bind-Value="postViewModel.Content" />
                            <ValidationMessage For="@(()=>postViewModel.Content)" />
                        </div>
                        <button class="btn btn-primary" type="submit" @onclick="Save">Save</button>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int PostId { get; set; }

    private Post post = new();
    private PostViewModel postViewModel = new();
    protected override async Task OnInitializedAsync()
    {
        post = await BlogHttpClient.GetFromJsonAsync<Post>($"/Post/{PostId}");
        postViewModel.PostId = post.PostId;
        postViewModel.BlogId = post.BlogId;
        postViewModel.Title = post.Title;
        postViewModel.Content = post.Content;
        postViewModel.OwnerId = post.OwnerId;
    }

    private async Task Save()
    {

        var response = await BlogHttpClient.PutAsJsonAsync($"/Post/{PostId}", postViewModel);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo($"/posts/{post.BlogId}");
        }
        else
        {
            Console.WriteLine(response.Content.ReadAsStringAsync().Result);
        }
    }

}